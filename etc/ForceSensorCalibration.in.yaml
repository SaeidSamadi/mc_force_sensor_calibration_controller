---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true
# Where to look for state libraries
StatesLibraries:
- "@MC_RTC_LIBDIR@/mc_controller/ForceSensorCalibration/states"
- "@MC_STATES_DEFAULT_INSTALL_PREFIX@"
- "@MC_STATES_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
  #- "@MC_RTC_LIBDIR@/mc_controller/ForceSensorCalibration/states/data"
- "@MC_STATES_DEFAULT_INSTALL_PREFIX@/data"
- "@MC_STATES_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
# Additional robots to load
robots:
  ground:
    module: env/ground
# General constraints, always on
constraints:
- type: contact
- type: kinematics
  robotIndex: 0
  damper: [0.1, 0.01, 0.5]
- type: compoundJoint
  robotIndex: 0
# Collision constraint
collisions:
- type: collision
  r1Index: 0
  r2Index: 0
  useMinimal: true
# Initial set of contacts
contacts: {}

# Implement some additional text states
states: {}

# Transitions map
transitions:
- [ChooseRobot, hrp5_p, HRP5P::Calibrate, Auto]
- [HRP5P::Calibrate, OK, HalfSitting, Auto]
# Initial state
init: InitialPosture
